# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-21 23:08
from __future__ import unicode_literals

from django.db import migrations


def count_connections(p):
    return (
        p.person2company_set.count()
        + p.from_persons.count()
        + p.person2country_set.count()
        + p.to_persons.count()
    )


def delete_stuck_orphans(apps, schema_editor):
    Person = apps.get_model("core", "Person")
    PersonDeduplication = apps.get_model("tasks", "PersonDeduplication")

    for pd in PersonDeduplication.objects.filter(status="m"):
        try:
            p1 = Person.objects.get(pk=pd.person1_id)
            p2 = Person.objects.get(pk=pd.person2_id)

            if not count_connections(p1):
                p1.delete()
            if not count_connections(p2):
                p2.delete()

            if count_connections(p1) and count_connections(p2):
                pd.applied = False
                pd.save()

        except Person.DoesNotExist:
            pass


class Migration(migrations.Migration):
    dependencies = [("tasks", "0024_auto_20171020_0121")]

    operations = [migrations.RunPython(delete_stuck_orphans)]
